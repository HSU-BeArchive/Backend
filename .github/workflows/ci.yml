name: CI with Gradle

on:
  pull_request:
    branches: ["main"] # main 브랜치에 PR 이벤트 발생 시 CI 실행
  push:
    branches: ["main"] # main 브랜치로 직접 push될 때도 CI 실행
  workflow_dispatch: # Actions 탭에서 수동 실행 버튼 제공

# 같은 브랜치에서 중복 실행되면 이전 빌드 취소
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

# 전역 환경변수
env:
  JAVA_VERSION: '21'
  IMAGE: ${{ secrets.DOCKER_USERNAME }}/bearchive # Docker Hub 이미지명 (소문자 필수)

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build JAR
        # 빌드할 모듈을 ':moamoa:' 로 명확히 지정
        run: ./gradlew :moamoa:bootJar -x test --no-daemon

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          # JAR 파일의 경로를 'moamoa' 모듈의 빌드 경로로 변경
          path: moamoa/build/libs/*.jar

  docker-push:
    name: Docker Build & Push
    # 조건: PR 이벤트가 아니고 && 대상 브랜치가 main일 때만 이미지 푸시
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    needs: build # 빌드 Job 성공 후에만 실행
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          # ✅ [수정] 아티팩트를 다운로드할 위치도 맞춰주는 것이 좋습니다.
          path: moamoa/build/libs

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ github.sha }}
